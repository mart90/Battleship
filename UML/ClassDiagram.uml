@startuml
set namespaceSeparator ::
scale max 1900 width

MBRD::NewGame --|> Microsoft::Xna::Framework::Game
MBRD::NewGame --> MBRD::StateManager::GameStateManager
MBRD::NewGame --> MBRD::GameStates::TitleIntroState
MBRD::NewGame --> MBRD::GameStates::MainMenuState
MBRD::NewGame --> MBRD::GameStates::GamePlayState


MBRD::Boats::AbstractBoat --> MBRD::Boats::IBoat
MBRD::Boats::AircraftCarrier --|> MBRD::Boats::AbstractBoat
MBRD::Boats::Battleship --|> MBRD::Boats::AbstractBoat
MBRD::Boats::Scout --|> MBRD::Boats::AbstractBoat
MBRD::Boats::Submarine --|> MBRD::Boats::AbstractBoat
MBRD::Boats::Fleet .up.> MBRD::Boats::AbstractBoat 


MBRD::Boats::Factory::FleetFactory ..> MBRD::Boats::Fleet
MBRD::Boats::Factory::FleetFactory -left-> MBRD::Boats::Factory::BoatFactory
MBRD::Boats::Factory::BoatFactory ..> MBRD::Boats::AircraftCarrier 
MBRD::Boats::Factory::BoatFactory ..> MBRD::Boats::Battleship 
MBRD::Boats::Factory::BoatFactory ..> MBRD::Boats::Scout 
MBRD::Boats::Factory::BoatFactory ..> MBRD::Boats::Submarine 


MBRD::StateManager::GameStateManager --|> MBRD::StateManager::IStateManager
MBRD::StateManager::GameStateManager --|> Microsoft::Xna::Framework::GameComponent
MBRD::StateManager::GameStateManager --> MBRD::GameStates::GameState


MBRD::GameStates::GameState ..|> MBRD::GameStates::IGameState
MBRD::GameStates::GameState --|> Microsoft::Xna::Framework::DrawableGameComponent


MBRD::GameStates::BaseGameState --|> MBRD::GameStates::GameState


MBRD::GameStates::ITitleIntroState --|> MBRD::GameStates::IGameState
MBRD::GameStates::TitleIntroState --|> MBRD::GameStates::BaseGameState
MBRD::GameStates::TitleIntroState ..|> MBRD::GameStates::ITitleIntroState


MBRD::GameStates::IMainMenuState --|> MBRD::GameStates::IGameState
MBRD::GameStates::MainMenuState --|> MBRD::GameStates::BaseGameState
MBRD::GameStates::MainMenuState ..|> MBRD::GameStates::IMainMenuState
MBRD::GameStates::MainMenuState ..> MBRD::Component::InputComponent


MBRD::GameStates::IGamePlayState --|> MBRD::GameStates::IGameState
MBRD::GameStates::GamePlayState ..|> MBRD::GameStates::IGamePlayState
MBRD::GameStates::GamePlayState --|> MBRD::GameStates::BaseGameState
MBRD::GameStates::GamePlayState --> MBRD::Player
MBRD::GameStates::GamePlayState --> MBRD::TileEngine::Engine

MBRD::Component::MenuComponent --> MBRD::Component::InputComponent

MBRD::TileEngine::Engine --> MBRD::TileEngine::TileMap
MBRD::TileEngine::TileMap --> MBRD::TileEngine::TileLayer
MBRD::TileEngine::TileMap --> MBRD::TileEngine::TileSet


abstract public class MBRD::GameStates::GameState {
}

interface MBRD::GameStates::ITitleIntroState {
}

interface MBRD::GameStates::IGameState {
	+Tag : GameState
    +PlayerIndeInputComponentControl : PlayerIndex
}

interface MBRD::GameStates::IMainMenuState {
}

interface MBRD::GameStates::IGamePlayState {
	+SetUpNewGame() : void
	+LoadExistingGame() : void
	+StartGame() : void
}

public class MBRD::GameStates::BaseGameState {
}

public class MBRD::GameStates::TitleIntroState {
}

public class MBRD::GameStates::MainMenuState {
}

public class MBRD::GameStates::GamePlayState {
}

public class MBRD::Component::MenuComponent {
}

public class MBRD::Component::InputComponent {
}

interface MBRD::StateManager::IStateManager {
	+CurrentState() : GameState
    +StateChanged : EventHandler;
    -PushState(state: GameState, index : PlayerIndex) : void
    -ChangeState(state :GameState, index : PlayerIndex) : void
    -PopState() : void
    -ContainsState(state : GameState) : bool 
}

public class MBRD::StateManager::GameStateManager {
	-gameStates : Stack<GameState> {readonly}
    -startDrawOrder : int = 5000
    -drawOrderInc : int = 50
    -drawOrder : int
}

public class MBRD::NewGame {
	-graphics : GraphicsDeviceManager 
	-spriteBatch : SpriteBatch 
	-gameStateManager : GameStateManager
	-titleIntroState : ITitleIntroState 
	-screenRectangle : Rectangle
	-config : ConfigManager

	+SpriteBatch() : SpriteBatch
	+ScreenRectangle() : Rectangle
	+NewGame() : void
	#Initialize() : void
	#LoadContent() : void
	#UnloadContent() : void
	#Update(gameTime : GameTime) : void
	#Draw(gameTime : GameTime) : void
	#LoadGame() : void
	#MouseClicked(x : int, y : int) : void
}

@enduml
